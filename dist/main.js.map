{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/food-display/food-display.component.html","webpack:///./src/app/food-display/food-display.component.ts","webpack:///./src/app/food-form/food-form.component.html","webpack:///./src/app/food-form/food-form.component.ts","webpack:///./src/app/food-select/food-select.component.html","webpack:///./src/app/food-select/food-select.component.ts","webpack:///./src/app/food.service.ts","webpack:///./src/app/food.ts","webpack:///./src/app/item.ts","webpack:///./src/app/nav-bar/nav-bar.component.html","webpack:///./src/app/nav-bar/nav-bar.component.ts","webpack:///./src/app/order-create/order-create.component.html","webpack:///./src/app/order-create/order-create.component.ts","webpack:///./src/app/order-list/order-list.component.html","webpack:///./src/app/order-list/order-list.component.ts","webpack:///./src/app/order.service.ts","webpack:///./src/app/order.ts","webpack:///./src/app/welcome/welcome.component.html","webpack:///./src/app/welcome/welcome.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { FoodFormComponent } from './food-form/food-form.component';\nimport { OrderListComponent } from './order-list/order-list.component';\nimport { OrderCreateComponent } from './order-create/order-create.component';\nimport { WelcomeComponent } from './welcome/welcome.component';\n\nconst routes: Routes = [\n  { path: 'food/add', component: FoodFormComponent },\n  { path: 'order', component: OrderListComponent },\n  { path: 'order/new', component: OrderCreateComponent },\n  { path: '', component: WelcomeComponent, pathMatch: 'full' },\n];\n\n@NgModule({\n  imports: [ RouterModule.forRoot(routes) ],\n  exports: [ RouterModule ]\n})\n\nexport class AppRoutingModule { }\n","<!--The content below is only a placeholder and can be replaced.-->\n<div style=\"text-align:center\">\n<app-nav-bar></app-nav-bar>\n<router-outlet></router-outlet>\n\n</div>\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { AppComponent } from './app.component';\n/* FORM IMPORTS */\nimport { FormsModule } from '@angular/forms';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { FormGroup, FormControl } from '@angular/forms';\nimport {TextFieldModule} from '@angular/cdk/text-field';\n\n/* routing */\nimport { AppRoutingModule } from './app-routing.module';\n\n/* async http */\nimport { HttpClientModule }    from '@angular/common/http';\n/* material animation */\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n/* icons */\nimport {MatIconModule} from '@angular/material/icon';\n/* material modules */\nimport {MatToolbarModule} from '@angular/material/toolbar';\nimport {MatFormFieldModule} from '@angular/material/form-field';\nimport {MatInputModule} from '@angular/material';\nimport { MatButtonModule, MatCheckboxModule} from '@angular/material';\nimport {MatCardModule} from '@angular/material/card';\nimport {MatGridListModule} from '@angular/material/grid-list';\nimport {MatMenuModule} from '@angular/material/menu';\nimport {MatDividerModule} from '@angular/material/divider';\nimport {MatExpansionModule} from '@angular/material/expansion';\nimport {MatListModule} from '@angular/material/list';\nimport {MatTableModule} from '@angular/material/table';\nimport {MatBottomSheetModule} from '@angular/material/bottom-sheet';\nimport {MatDialogModule} from '@angular/material/dialog';\nimport {MatSnackBarModule} from '@angular/material/snack-bar';\n\n/* Custom components */\nimport { FoodFormComponent } from './food-form/food-form.component';\nimport { FoodDisplayComponent } from './food-display/food-display.component';\nimport { OrderDisplayComponent } from './order-display/order-display.component';\nimport { NavBarComponent } from './nav-bar/nav-bar.component';\nimport { OrderListComponent } from './order-list/order-list.component';\nimport { WelcomeComponent } from './welcome/welcome.component';\nimport { FoodSelectComponent } from './food-select/food-select.component';\nimport { FoodSelectSnackComponent } from './food-select-snack/food-select-snack.component';\nimport { OrderCreateComponent } from './order-create/order-create.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    FoodFormComponent,\n    FoodDisplayComponent,\n    OrderDisplayComponent,\n    NavBarComponent,\n    OrderListComponent,\n    WelcomeComponent,\n    FoodSelectComponent,\n    FoodSelectSnackComponent,\n    OrderCreateComponent,\n  ],\n  imports: [\n    FormsModule,\n    MatDialogModule,\n    MatSnackBarModule,\n    MatBottomSheetModule,\n    MatTableModule,\n    MatListModule,\n    MatExpansionModule,\n    MatDividerModule,\n    MatIconModule,\n    MatMenuModule,\n    MatToolbarModule,\n    MatCardModule,\n    MatGridListModule,\n    HttpClientModule,\n    ReactiveFormsModule,\n    TextFieldModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatButtonModule,\n    MatCheckboxModule,\n    BrowserModule,\n    BrowserAnimationsModule,\n    AppRoutingModule,\n  ],\n  entryComponents: [\n    FoodDisplayComponent\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\n\nexport class AppModule {\n\n}\n","<div>\n<div mat-dialog-title>\n  <mat-card class=\"example-card\">\n    <mat-card-header>\n      <!--div mat-card-avatar class=\"example-header-image\"></div-->\n      <mat-card-title class=\"dont-break-out\">{{data.food.name}}</mat-card-title>\n      <mat-card-subtitle>\n        <span matPrefix>$&nbsp;</span>\n        {{data.food.price}}\n      </mat-card-subtitle>\n    </mat-card-header>\n    <!--img mat-card-image src=\"https://material.angular.io/assets/img/examples/shiba2.jpg\" alt=\"Photo of a Shiba Inu\"-->\n    <mat-card-content>\n      <p>\n        {{data.food.description}}\n      </p>\n    </mat-card-content>\n  </mat-card>\n</div>\n\n\n<div mat-dialog-content>\n  <mat-form-field>\n    <input [ngModel]=\"data.subtotal\"\n          matInput disabled\n          placeholder=\"subtotal\">\n  </mat-form-field>\n  <mat-form-field>\n    <input [(ngModel)]=\"data.count\"\n    matInput cdkFocusInitial\n    (keyup)=\"updateItem()\"\n    (keydown)=\"submitItem($event)\"\n    placeholder=\"quantity\"\n    type=\"number\">\n    <button mat-button *ngIf=\"data.count != 0\"\n    matSuffix mat-icon-button\n    aria-label=\"Clear\" (click)=\"data.count = 0\">\n    <mat-icon>close</mat-icon>\n  </button>\n</mat-form-field>\n</div>\n\n<div mat-dialog-actions>\n  <button mat-button color=\"warn\" [mat-dialog-close]=\"null\">Cancel</button>\n</div>\n","import { Component, OnInit, Inject } from '@angular/core';\nimport {NgForm} from '@angular/forms';\nimport { FormGroup, FormControl } from '@angular/forms';\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\nimport { Item } from '../item';\n\n@Component({\n  selector: 'app-food-display',\n  templateUrl: './food-display.component.html',\n  styleUrls: ['./food-display.component.css']\n})\nexport class FoodDisplayComponent implements OnInit {\n\n\n\n\n  constructor(\n    @Inject(MAT_DIALOG_DATA) public data: Item,\n    public dialogRef: MatDialogRef<FoodDisplayComponent>) {}\n\n\n\n  ngOnInit() {\n  }\n\n  updateItem(){\n    this.data.updateSubtotal();\n  }\n\n\n  submitItem(event) {\n    if(event.keyCode == 13) {\n      this.closeDialog();\n    }\n  }\n\n  closeDialog(): void{\n    this.dialogRef.close(this.data);\n  }\n\n\n\n}\n","<div>\n  <form [formGroup]=\"foodForm\">\n    <h1>Food Form</h1>\n    <p>\n      <mat-form-field>\n        <mat-label>Name</mat-label>\n        <input #foodName matInput formControlName=\"name\">\n    </mat-form-field>\n    </p>\n    <p>\n      <mat-form-field>\n        <mat-label>Price</mat-label>\n        <input matInput\n            formControlName=\"price\"\n            type=\"number\"\n            class=\"example-right-align\">\n        <span matPrefix>$&nbsp;</span>\n      </mat-form-field>\n    </p>\n    <p>\n      <mat-form-field>\n        <mat-label>Description</mat-label>\n        <textarea matInput cdkTextareaAutosize formControlName=\"description\"\n                #autosize=\"cdkTextareaAutosize\"\n                cdkAutosizeMinRows=\"2\"\n                cdkAutosizeMaxRows=\"5\"></textarea>\n      </mat-form-field>\n    </p>\n    <button mat-button (click)=\"saveFood()\">submit</button>\n  </form>\n</div>\n","import { Component, ViewChild, ElementRef } from '@angular/core';\nimport { FormGroup, FormControl } from '@angular/forms';\nimport { FoodService } from '../food.service';\nimport { Food } from '../food';\n\n@Component({\n  selector: 'app-food-form',\n  templateUrl: './food-form.component.html',\n  styleUrls: ['./food-form.component.css']\n})\n\nexport class FoodFormComponent {\n  @ViewChild('foodName') foodNameRef: ElementRef;\n\n  constructor(\n    private foodService: FoodService){\n\n  }\n\n  foodForm = new FormGroup({\n    name: new FormControl(''),\n    price: new FormControl(''),\n    description: new FormControl(''),\n  });\n\n  saveFood(){\n    let params = this.foodForm.controls;\n\n    let food = new Food(\n        params.name.value,\n        params.price.value,\n        params.description.value\n    );\n    \n    this.foodService.saveFood(food);\n    this.foodForm.reset();\n    this.foodNameRef.nativeElement.focus();\n\n  }\n}\n","\n<table mat-table [dataSource]=\"items\" class=\"mat-elevation-z8\">\n\n<!--- Note that these columns can be defined in any order.\n  The actual rendered columns are set as a property on the row definition\" -->\n  <ng-container matColumnDef=\"count\">\n    <th mat-header-cell *matHeaderCellDef> qty </th>\n    <td mat-cell *matCellDef=\"let item\"> {{item.count}} </td>\n    <td mat-footer-cell *matFooterCellDef> Total: </td>\n  </ng-container>\n\n  <ng-container matColumnDef=\"name\">\n    <th mat-header-cell *matHeaderCellDef> food </th>\n    <td mat-cell *matCellDef=\"let item\"> {{item.food.name}} </td>\n    <td mat-footer-cell *matFooterCellDef> {{getTotalCost() | currency}} </td>\n  </ng-container>\n\n  <ng-container matColumnDef=\"subtotal\">\n    <th mat-header-cell *matHeaderCellDef> subtotal </th>\n    <td mat-cell *matCellDef=\"let item\"> {{item.subtotal | currency}} </td>\n    <td mat-footer-cell *matFooterCellDef>\n      <button mat-button color=\"primary\" [disabled]=\"order.items.size === 0\">\n        <mat-icon (click)=\"saveOrder()\">check</mat-icon>\n      </button>\n    </td>\n  </ng-container>\n<tr mat-header-row *matHeaderRowDef=\"columnsToDisplay; sticky: true\"></tr>\n  <tr mat-row *matRowDef=\"let row; columns: columnsToDisplay;\"\n      (click)=\"openDialog(row)\"></tr>\n  <tr mat-footer-row *matFooterRowDef=\"columnsToDisplay; sticky: true\"></tr>\n</table>\n","import { Component, OnInit, ViewChild, Input } from '@angular/core';\nimport {MatDialog, MatDialogRef, MAT_DIALOG_DATA} from '@angular/material';\nimport {MatTable} from '@angular/material';\nimport { FoodDisplayComponent } from '../food-display/food-display.component';\nimport { OrderService } from '../order.service';\nimport { Order } from '../order';\nimport { Item } from '../item';\n\n@Component({\n  selector: 'app-food-select',\n  templateUrl: './food-select.component.html',\n  styleUrls: ['./food-select.component.css']\n})\nexport class FoodSelectComponent implements OnInit {\n\n  _order : Order;\n  currentItem: Item;\n  selectedItems : Item[];\n  @Input() items: Item[];\n  data : Item[];\n\n  //table\n  @ViewChild(MatTable) table: MatTable<any>;\n  columnsToDisplay = ['count', 'name', 'subtotal'];\n\n  constructor(\n    private orderService: OrderService,\n    public dialog: MatDialog) {\n      this._order = new Order();\n  }\n\n  ngOnInit() {\n  }\n\n  get order(){\n    return this._order\n  }\n\n  getTotalCost(): number{\n    return this._order.total;\n  }\n\n  openDialog(selection: Item) {\n    this.currentItem = selection;\n\n    const dialogRef = this.dialog.open(FoodDisplayComponent, {\n      width: '100vw',\n      data: selection,\n      disableClose : true,\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      if(result){\n        this._order.addItem(result);\n        console.log(this._order.items);\n      }\n    });\n  }\n\n  saveOrder(){\n    console.log(this._order);\n    this.orderService.saveOrder(this._order);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { catchError, map, tap } from 'rxjs/operators';\nimport { Food } from './food';\n\nconst httpOptions = {\n  headers: new HttpHeaders({ 'Content-Type': 'application/json' })\n};\n\n@Injectable({\n  providedIn: 'root'\n})\n\n\nexport class FoodService {\n\n  foodUrl = 'https://rest-app-rant-server.herokuapp.com/rest/food';\n\n  constructor(\n  private http: HttpClient) {\n  }\n\n  getFoods(){\n    return this.http.get<Food[]>(this.foodUrl);\n  }\n\n  saveFood(food:Food){\n    console.log(\"sending post\");\n    console.log(food);\n    this.http.post(this.foodUrl, food, httpOptions).subscribe(\n        res => {\n          console.log(res);\n        },\n        err => {\n          console.log(\"Error occured\");\n        }\n    );\n  }\n}\n","export class Food {\n\n  constructor(\n    name: string,\n    price: number,\n    description: string){\n      this.name = name;\n      this.price = price;\n      this.description = description;\n\n  }\n\n  name: string;\n  price: number;\n  description: string;\n\n}\n","import { Food } from './food';\n\nexport class Item {\n  private _count: number;\n  private _subtotal: number;\n  food: Food;\n\n  constructor(\n    food: Food){\n      this.food = food;\n      this.count = 0.0;\n      this._subtotal = 0.0;\n  }\n\n  set count(count: number){\n    if(count >= 0){\n      this._count = count;\n      this.updateSubtotal();\n    }\n  }\n\n  get count(): number{\n    return this._count;\n  }\n\n  updateSubtotal(): void{\n    this._subtotal = this.count * this.food.price;\n  }\n\n  get subtotal(): number{\n    return this._subtotal;\n  }\n}\n","<mat-toolbar class=\"app-toolbar\">\n  <mat-toolbar-row>\n\n    <mat-icon (click)=\"goBack()\">arrow_back</mat-icon>\n\n    <button mat-menu-item routerLink=\"/\">\n      <span class=\"spacer\">\n        {{ title }}!\n      </span>\n    </button>\n\n    <button mat-icon-button [matMenuTriggerFor]=\"menu\">\n      <mat-icon>more_vert</mat-icon>\n    </button>\n\n\n    <mat-menu #menu=\"matMenu\">\n      <button mat-menu-item routerLink=\"/food/add\">\n        <span><mat-icon>add</mat-icon> food</span>\n      </button>\n\n      <mat-divider></mat-divider>\n\n      <button mat-menu-item routerLink=\"/food\">\n        <span>foods</span>\n      </button>\n      <button mat-menu-item routerLink=\"/order\">\n        <span>orders</span>\n      </button>\n    </mat-menu>\n  </mat-toolbar-row>\n</mat-toolbar>\n","import { Location } from '@angular/common';\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-nav-bar',\n  templateUrl: './nav-bar.component.html',\n  styleUrls: ['./nav-bar.component.css']\n})\nexport class NavBarComponent implements OnInit {\n\n  title = 'FoodApp';\n\n  constructor(private location: Location) {\n  }\n\n  ngOnInit() {\n  }\n\n\n  goBack(): void {\n    this.location.back();\n  }\n}\n","<app-food-select [items]=\"items\"></app-food-select>\n","import { Component, OnInit } from '@angular/core';\nimport { FoodSelectComponent } from '../food-select/food-select.component';\nimport { OrderService } from '../order.service';\nimport { FoodService } from '../food.service';\nimport { Food } from '../food';\nimport { Order } from '../order';\nimport { Item } from '../item';\n\n@Component({\n  selector: 'app-order-create',\n  templateUrl: './order-create.component.html',\n  styleUrls: ['./order-create.component.css']\n})\nexport class OrderCreateComponent implements OnInit {\n\n\n  items: Item[] = new Array();\n\n  constructor(\n    private foodService: FoodService) {\n    }\n\n  ngOnInit() {\n    this.getFoods();\n  }\n\n  getFoods(){\n    this.foodService.getFoods()\n    .subscribe(foods => {\n      this.items = foods.map(food => {\n        return new Item(food);\n      });\n    });\n\n  }\n}\n","<mat-divider></mat-divider>\n\n<mat-toolbar>\n  <span class=\"spacer\"></span>\n  <a mat-raised-button color=\"basic\"\n     routerLink=\"/order/new\">\n     new order\n  </a>\n</mat-toolbar>\n\n<mat-accordion>\n  <mat-expansion-panel *ngFor=\"let order of orders\">\n    <mat-expansion-panel-header>\n      <mat-panel-title>\n        Order #{{order.number}}\n      </mat-panel-title>\n      <mat-panel-description>\n        Total: ${{order.total}}\n      </mat-panel-description>\n    </mat-expansion-panel-header>\n\n      <table mat-table [dataSource]=\"order.items\" class=\"mat-elevation-z8\">\n\n    <!--- Note that these columns can be defined in any order.\n        The actual rendered columns are set as a property on the row definition\" -->\n        <ng-container matColumnDef=\"quantity\">\n          <th mat-header-cell *matHeaderCellDef> qty </th>\n          <td mat-cell *matCellDef=\"let item\"> {{item.count}} </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"food\">\n          <th mat-header-cell *matHeaderCellDef> food </th>\n          <td mat-cell *matCellDef=\"let item\"> {{item.food.name}} </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"subtotal\">\n          <th mat-header-cell *matHeaderCellDef> subtotal </th>\n          <td mat-cell *matCellDef=\"let item\"> ${{item.subtotal}} </td>\n        </ng-container>\n\n        <tr mat-header-row *matHeaderRowDef=\"columnsToDisplay\"></tr>\n        <tr mat-row *matRowDef=\"let row; columns: columnsToDisplay;\"></tr>\n      </table>\n\n\n      <mat-action-row>\n        <button mat-button color=\"primary\" (click)=\"nextStep()\">\n          <mat-icon>add</mat-icon>\n        </button>\n          <button mat-button color=\"primary\" (click)=\"nextStep()\">checkout</button>\n      </mat-action-row>\n\n  </mat-expansion-panel>\n</mat-accordion>\n","import { Component, OnInit } from '@angular/core';\nimport { FoodSelectComponent } from '../food-select/food-select.component';\nimport { FoodDisplayComponent } from '../food-display/food-display.component';\nimport { OrderService } from '../order.service';\nimport { Order } from '../order';\n\n@Component({\n  selector: 'app-order-list',\n  templateUrl: './order-list.component.html',\n  styleUrls: ['./order-list.component.css']\n})\n\nexport class OrderListComponent implements OnInit {\n\n  newOrder: Order;\n  orders: Order[];\n\n  columnsToDisplay = ['quantity', 'food', 'subtotal'];\n\n  constructor(\n    private orderService : OrderService) {\n\n  }\n\n\n\n  ngOnInit() {\n    this.getOrders();\n  }\n\n  getOrders(){\n    this.orderService.getOrders()\n    .subscribe(orders => {\n      this.orders = orders;\n    });\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { catchError, map, tap } from 'rxjs/operators';\nimport { Order } from './order';\n\nconst httpOptions = {\n  headers: new HttpHeaders({ 'Content-Type': 'application/json' })\n};\n\n@Injectable({\n  providedIn: 'root'\n})\n\n\nexport class OrderService {\n\n  orderUrl = 'https://rest-app-rant-server.herokuapp.com/rest/order';\n\n  constructor(\n    private http : HttpClient) {\n\n  }\n\n  getOrders(){\n    return this.http.get<Order[]>(this.orderUrl);\n  }\n\n  saveOrder(order: Order){\n    console.log(\"sending order post\");\n    this.http.post(this.orderUrl, order, httpOptions).subscribe(\n        res => {\n          console.log(res);\n        },\n        err => {\n          console.log(\"Error occured\");\n        }\n    );\n  }\n\n}\n","import { Item } from './item';\n\nexport class Order {\n\n  number: number;\n  private _total: number;\n  items: Set<Item>;\n\n  constructor(){\n    this.number = 0;\n    this.items = new Set<Item>([]);\n  }\n\n  addItem(item: Item){\n    if(item.count === 0){\n      this.items.delete(item);\n    }else{\n      this.items.add(item);\n    }\n  }\n\n  get total(): number{\n    let its = Array.from(this.items);\n    if(its.length == 0){\n       return 0;\n    }else{\n      return its.map(it => it.subtotal)\n        .reduce((total, subtotal) => total + subtotal);\n    }\n  }\n\n}\n","<p>\n  menu\n</p>\n<p>\n  promos\n</p>\n<p>\n  tips\n</p>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-welcome',\n  templateUrl: './welcome.component.html',\n  styleUrls: ['./welcome.component.css']\n})\nexport class WelcomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import 'hammerjs';\nimport { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}